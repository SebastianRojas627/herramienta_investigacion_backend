import { Injectable } from '@nestjs/common';
import { CreateSearchDto } from './dto/create-search.dto';
import { UpdateSearchDto } from './dto/update-search.dto';
import { LogsService } from 'src/logs/logs.service';
import { CreateLogDto } from 'src/logs/dto/create-log.dto';
import { lastValueFrom } from 'rxjs';
import { HttpService } from '@nestjs/axios';
import { SearchSegipDto } from 'src/segip/dto/search-segip.dto';
import { AntecendentesService } from 'src/antecendentes/antecendentes.service';
import { ItvService } from 'src/itv/itv.service';
import { SegipService } from 'src/segip/segip.service';
import { SearchItvDto } from 'src/itv/dto/search-itv.dto';
import { SearchByOwnerDto } from 'src/itv/dto/search-by-owner.dto';
import { dividirNombreMadre, dividirNombrePadre } from 'src/helpers/helpers';

@Injectable()
export class SearchService {
  constructor(
    private readonly logsService: LogsService,
    private readonly httpService: HttpService,
    private readonly antecedentesService: AntecendentesService,
    private readonly itvService: ItvService,
    private readonly segipService: SegipService,
  ) {}

  async searchSegip(searchSegipDto: SearchSegipDto) {
    const response = await this.segipService.searchSegip(searchSegipDto);

    const antecedentesResponse = await Promise.all(
      response.map(async (element) => {
        const numeroDocumento = element.NumeroDocumento;

        const antecedentes = await this.antecedentesService.searchAntecedentes({
          NumeroDocumento: numeroDocumento,
        });

        return {
          PrimerApellido: element.PrimerApellido,
          SegundoApellido: element.SegundoApellido,
          Nombres: element.Nombres,
          NumeroDocumento: element.NumeroDocumento,
          Domicilio: element.Domicilio,
          Antecedentes: antecedentes,
        };
      }),
    );

    return antecedentesResponse;
  }

  async searchItv(searchItvDto: SearchItvDto) {
    const response = await this.itvService.searchItv(searchItvDto);

    const vehicleResponse = await Promise.all(
      response.map(async (element) => {
        return {
          datos_tecnicos: {
            placa: element.datos_tecnicos.placa,
            marca: element.datos_tecnicos.marca,
            modelo: element.datos_tecnicos.modelo,
            color: element.datos_tecnicos.color,
          },
        };
      }),
    );

    return vehicleResponse;
  }

  async searchSegipOne(userId: string, searchSegipDto: SearchSegipDto) {
    const response = await this.segipService.searchSegipOne(searchSegipDto);

    const numeroDocumento = response.NumeroDocumento;

    const nombrePadre = dividirNombrePadre(
      response.NombreCompletoPadre,
      response.PrimerApellido,
    );
    const padre = await this.segipService.searchSegipbyName({
      ced: '',
      com: '',
      nom: nombrePadre.nombres,
      pat: nombrePadre.apellidoPaterno,
      mat: nombrePadre.apellidoMaterno,
    });

    const nombreMadre = dividirNombreMadre(
      response.NombreCompletoMadre,
      response.SegundoApellido,
    );
    const madre = await this.segipService.searchSegipbyName({
      ced: '',
      com: '',
      nom: nombreMadre.nombres,
      pat: nombreMadre.apellidoPaterno,
      mat: nombreMadre.apellidoMaterno,
    });

    const nombreConyuge = response.NombreCompletoConyuge;
    const partsConyuge = nombreConyuge.trim().split(/\s+/);
    const conyuge = await this.segipService.searchSegipbyName({
      ced: '',
      com: '',
      nom: partsConyuge[0],
      pat: partsConyuge[1],
      mat: partsConyuge[2],
    });

    const posiblesHermanos = await this.searchSegip({
      ced: '',
      com: '',
      nom: '',
      pat: response.PrimerApellido,
      mat: response.SegundoApellido,
    }); // agregar la comparacion de nombre completo padres

    const hermanos = posiblesHermanos.filter(
      (hermano) => hermano.NumeroDocumento !== numeroDocumento,
    );

    const posiblesHijos = await this.searchSegip({
      ced: '',
      com: '',
      nom: '',
      pat: response.PrimerApellido,
      mat: response.SegundoApellido,
    }); // agregar el apellido de la conyuge y comparar resultados con el nombre completo padre que seria nombre de persona original

    const hijos = posiblesHijos.filter(
      (hermano) => hermano.NumeroDocumento !== numeroDocumento,
    );

    const antecedentes = await this.antecedentesService.searchAntecedentes({
      NumeroDocumento: numeroDocumento,
    });

    const vehiculos = await this.searchVehiculosByOwner({
      nro_documento: numeroDocumento,
    });

    const createLogDto: CreateLogDto = {
      user_id: userId,
      busqueda: numeroDocumento,
      tipo: 'persona',
    };
    await this.logsService.create(createLogDto);

    let Fotografia;

    if (response.Genero === 'Femenino') {
      Fotografia =
        '';
    } else {
      Fotografia =
        '/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAB4AJEDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+oyQxznA7H0NBbKnJ4PbHSlUE5yBz1PrQAigMDnIPcf1qToKQAD6mmTSrDC0j/dUZNAD8jn2Gao3uqWumwefeTKkZ6DvmsTVvEpsog58uMHpuJ3AetcJ4n1yK/WNnuQrq+Rg5DDFAWO6j8aw3Un+i2rvGD95yVz+n9asXXjDT7SJXmVwx/g4zXjM+uMmE84mNfugdqzZNckeTczMw7ZOadgPVr34nxCfy7O1zjqZWxUkHxGR4mNzBHGV6AE/NXjlxq+9sqqhj7daX+1HCAAn8+lFhntdr4+hlYj7OxjPTavH5k/0rpLDXLW+KoAY3I4DdD9DXzkupT2sisJDuY5966DTvF99aR4SQPsOdrdvpSsI+gaQkAZNeTeH/iDcrcCO7laVXPRucV3kXinTJnWN5xG7fwkdPxosBs/gR7f3TT1zzkc96himWYLJG4ZT3HTFWKACkY7VJpaKAI/3n99fyoo8mP8AuiigBxXrjAJ6mnAYGB2oooARjgZ6Yrj/ABT4nksYZIYbJ5Fx8zg118g3IRzyO1eK+Pp3iuzAsj+YGJZQcACgDC1fXrnUGxLnYpztHB/OsK5vFaPaqkEdMdafarLdTLEqcZ5Ndvpvhi38pGljBPfIqJVFE2hScjzxbW7n+ZEcg9yKjk0u9BwY2FezDSbNIwqx44qu2k2x+8ucetZPEM6FhlbU8eFjdA8wsfwqxHpl5Kflhf8AKvWV0m2JyUH5U9dNtkPC4+lL6wx/V4nlkegX7HPlke2aSfS7615MLV6/DY2y8mMH3NJc6faTrtZcULEO5MsOjx6CeSKTH8Q7EV0GjalLJfJGSiLu5JGa1tW8IQ73kiZgeorn7ewe3ulUgs27jmuiNRT2OedNxZ7b4csZktFuIbtzE7Z2OoIIrpq5bwlHL5RdWP2UKAi543d/6V1BOAT6UzIazEDjr/L3pVPO3OeMg0znI5GT0P8ASnqpU9sUAOooooAKMgdaQ9D/AFphIJy33enPagB5ryj4jWtvHrCME+eRPm5r1YZ2jNea/Ey0b7ZZ3Gflb5CfSjoCV2clpNgqyKUX9K7e2ify1G386radYx21rHtxkDJJ71Q1G+uDIUSZUC9MVxzd2ehT91aHQ+SqkGRgB2qKRISThhXC3M2puG8rUMD0I6VlG/1eCT5r3dz0qeQ0U31PSNpB4IP0ox61yek6ldXL7GbLH0rcuPtEVuzk9BU2NLo10khRfnYH8an32r55APceteY3moXsrti5KD2plr8zAz6q49AGAqowMpSPTJIopE2K6nj1rj9a01reTzQuAOc4pbZoI2UpcSk9mLda3px9q0W43EOVjYg/QVcXyMymuZHS+CLgzeHkO3neQB+Aro3+9kn8c9K53wTbiLwzbruG8kscdq6RVw3AwAMfWus4nuGwHkZGfXtT6KKBBRRRQBGxBOOw60Lgtg5OOh9RSKDkY6dj6CpAADmgBMYAA7V5/wDEWaWWS2slTcpHmAjqCK9BNcj4yszOIpInCTFSobHbvUydkXTV5GE7yvp8axDLFQK5670bUJiSX8tT12810Vs/2e2QMBlRg5HWrYulIwBuzXHKVmehGOljz280OOYJvmnVgMMdhOffHSmJpCKqoiy7gcmRhjP4V6BLbibrlR9KrmyghO84Y+/Wl7Rl+zW5kaFpvlX0b+WVXPJ9a63ULRJbSVNvzY4PtVa1jAYMwx6Cr7XMZDK3AIxms2yrHnU+ieYoIjYFeoz1qunh5C5b7JLknJCyDFd5NFtw6qHj9RUXlxOdy4H0q1JohwTMG18O+Y4dUMHTgNx+Vb9vp7WytG0m5WXB/GmtMYQNpz6U1bxnIUnvkGnzNsUopGn4EWeKW+hYExBgVYn6129cv4WURPPEvIwG/nXUV2x2POqfEFFFRk568qOoqiCSiovLX/nq3/fVFAEijaMUtFHagBDWTruny3tqPJw0iZOD3rUY5IHIB70qnI56jik1cabTueZ3kMtuoSaJo3H8L1UjuCh7nFdp4q08y24uY1yU+8B6VwLSANiuWpGx3UqnMagvCy9cU3cXGSwB7c1iXN8YVyvP0rNGuXYky1pKy9tves1G5u52L98+rwXZdLzdH1C4wMVHHrF5I5U4DHpk8VCdSvZOF05gvuMmgXMzD5tOk3DphTTcb9Bq+5qaYl75zSTagzq3WPtWnI4j+ZH/AAzWAt5qijEdoqr/ALWAP55qvLeakXBaFAvcq/ShxJbaOga4EjfMcf0qxYx+dcBOm4hSfrWJbT7iC55rr/Ctg9zd+ey4ijOc+pp043djKpO0bnXadp0Onw4jLMzfeZupq/TaQt83XAHJ967bWOBu+oOw6Z+v0pBjcBnp0Pr7Ug+9kDPPHHT61IFAOR26CgQ3yY/7oop9FABSMcDjucUFvmwBn19qj/iOef60AGOdvHuPX3p4BAwTmo3ZIR5kjhVUZLMa5TWfiNo2m7khLXcg4xH93P1oA65gpUhsFSOQa8s8Z2EGn3xktWBR+SoOdpqoniG+8YajKJ7h7axhAItoWI3n/aPWmaskSQLFCioqfdAHFYVJrZnTSpy3uc99oJfk59KsK5ZcKOO1ZlxGyOSuT65pYdTMPDoPqKxt2OhPuaDi+J/clhTfI1dzzIB9TUI19FGAQBR/bcR58wZNGpopIvR29+B+9lz9DUzBgmCc+prNTWUYYTJPoKmE8lxgY2ipuJu5cgIMo9O9dhp3jvTNHjWxureWMxgZdACGz3rjokC4rI8TSqLi3P8AEUwfzrWjLU5qy0ue3WPi/QtRwIdQiDH+GQ7D+tbW6NwGBU+hBr5chm+RgecdK0dP8U6tokgNrfTCHP3C2QK6jkPpNeOp5PWnV5JpvxUv0RTdW8NzGRyU+Vq6zT/iLoV5gSyPbOe0i8fmKAOvorC/4TDQv+f+P86KALuparYaZGZby6SJccgnk/hXEap8T7W3R/sNqzAdJJeB+Vea3mpS3U5eeV5pT3Y5rE1G6LSLEDyetAHR6p4t1TX5C13cusIPEKnC/pWLcTZTjseKpLJhQo4omfCqKaA0NE1ltM1NJCT5b8PXaXdwlyoeM7lPpXl0oJHH1FaekeIzY4trzPl9FfH3frWFand3R0UatlZnTzgHINZs0GTkVoLPBdReZDIrg9wahbCnrXNdo6tGYs1ucnIpkVluPKj/AArUkhMhOKjQeUfmOPrRzMOVFi0ttg5GK04gBz0rKbUbWBMvOi47E1mXfiyKNCtou9j/ABY4pKMm7Cc4xOoub+GxiM0zgADgdzXFXuqPqV60xBC9FU9hWZcXtzfS753LH07CpIhhePzrqp0uXVnLVrc2iL0En7wAmpJDjKmqSMVcE1ac5Ab1re5gJBcNbPjJ8s9vSrom546fWsp+uD36U+GYg+U+RjoaLiNT7Sf77fnRVTLegooGTxS/MzE9qyTJ5t0z+hoopATq3IFJK+T16dKKKYDM5FRPGjDDDNFFFwsVfJeE7oJHj/3Saf8A2hqadLx/xNFFLlQ1JiHUtSPDXj/gRUDzXMp+e5kb6vRRS5Ug5n3IvLO7JOalWLPb8aKKBPcsRp7VZXAoopgDEVYVsx4oooAimXcMd+1RriYbc4kWiigA8uf+9RRRTA//2Q==';
    }

    return {
      Fotografia: Fotografia,
      ...response,
      Antecedentes: antecedentes,
      Relations: {
        padres: [
          {
            ...padre,
          },
          {
            ...madre,
          },
        ],
        hermanos,
        hijos,
        conyugue: {
          ...conyuge,
        },
        vehiculos,
      },
    };
  }

  async searchItvOne(userId: string, searchItvDto: SearchItvDto) {
    const response = await this.itvService.searchItvOne(searchItvDto);
    const personas = await this.searchPersonasByVehiculo({
      placa: response.datos_tecnicos.placa,
    });

    const createLogDto: CreateLogDto = {
      user_id: userId,
      busqueda: response.datos_tecnicos.placa,
      tipo: 'vehiculo',
    };

    await this.logsService.create(createLogDto);

    return {
      Fotografia:
        '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',
      ...response,
      Relations: {
        personas: personas,
      },
    };
  }

  async searchVehiculosByOwner(searchByOwnerDto: SearchByOwnerDto) {
    const response = await this.itvService.searchByOwner(searchByOwnerDto);
    const ownerResponse = await Promise.all(
      response.map(async (element) => {
        return {
          Fotografia:
            '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',
          datos_tecnicos: {
            placa: element.datos_tecnicos.placa,
            marca: element.datos_tecnicos.marca,
            modelo: element.datos_tecnicos.modelo,
            color: element.datos_tecnicos.color,
          },
        };
      }),
    );

    return ownerResponse;
  }

  async searchPersonasByVehiculo(searchItvDto: SearchItvDto) {
    const response = await this.itvService.searchPersonaVehicles(searchItvDto);
    const vehicleResponse = await Promise.all(
      response.map(async (element) => {
        return {
          Fotografia:
            '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',
          PrimerApellido: element.paterno,
          SegundoApellido: element.materno,
          Nombres: element.nombre,
          NumeroDocumento: element.nro_documento,
          Domicilio: element.domicilio,
        };
      }),
    );

    return vehicleResponse;
  }
}
